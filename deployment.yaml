---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-log-wrapper-api-sa
  namespace: default
automountServiceAccountToken: true

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-log-wrapper-api-role
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-log-wrapper-api-binding
roleRef:
  kind: ClusterRole
  name: kube-log-wrapper-api-role
  apiGroup: "rbac.authorization.k8s.io"
subjects:
  - kind: ServiceAccount
    name: kube-log-wrapper-api-sa
    namespace: default

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-log-wrapper-api
  namespace: default
  labels:
    app.kubernetes.io/name: kube-log-wrapper-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-log-wrapper-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-log-wrapper-api
    spec:
      containers:
        - name: kube-log-wrapper-api
          image: docker.io/juliocesarmidia/kube-log-wrapper-api:v1.0.0
          imagePullPolicy: Always     # Never IfNotPresent Always
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
          ports:
            - name: http
              containerPort: 9000
          livenessProbe:
            httpGet:
              path: /v1/health
              port: http
              httpHeaders:
              - name: Content-type
                value: application/json
            initialDelaySeconds: 5
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /v1/health
              port: http
              httpHeaders:
              - name: Content-type
                value: application/json
            initialDelaySeconds: 5
            timeoutSeconds: 15
          resources:
            limits:
              memory: 32Mi
              cpu: 20m
              ephemeral-storage: "10Mi"
            requests:
              memory: 16Mi
              cpu: 10m
              ephemeral-storage: "5Mi"
          env:
            - name: RUNNING_IN_KUBERNETES
              value: '1'
            - name: X_API_KEY
              value: '1vfof8KD$}AVf%XizGRhHBmism2iALC2&GNPYKo]N-O2HN1p'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: kube-log-wrapper-api-sa
      tolerations: []

---

apiVersion: v1
kind: Service
metadata:
  name: kube-log-wrapper-api
  namespace: default
  labels:
    app.kubernetes.io/name: kube-log-wrapper-api
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: kube-log-wrapper-api
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
